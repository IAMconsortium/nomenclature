# This workflow installs the package and runs the tests
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: nightly

on:
  schedule:
    # see https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#scheduled-events
    # 05:00 UTC = 06:00 CET = 07:00 CEST
    - cron: "0 5 * * TUE"
jobs:
  pytest:

    strategy:
      matrix:
        # keep consistent with py-version badge in README.md and docs/index.rst
        python-version: ['3.11']
      fail-fast: false

    runs-on: ubuntu-latest
    name: py${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Install poetry dynamic versioning plugin
      run: poetry self add "poetry-dynamic-versioning[plugin]"
      # ----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root --with dev
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
    - name: Install library
      run: poetry install --no-interaction

    - name: Test with pytest
      run: poetry run pytest tests
